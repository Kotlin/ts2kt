plugins {
  id("kotlin2js")
  id "com.moowork.node" version "1.2.0"
}

repositories {
  mavenCentral()
  jcenter()
}

dependencies {
  implementation("org.jetbrains.kotlin:kotlin-stdlib-js:$gradle.kotlinVersion")
}

def testDistribPath = "${project.buildDir}/test"
def distribPath = "${project.buildDir}/distrib"
def testNodeModulesPath = "${testDistribPath}/node_modules"

node {
  download = true
  version = '11.1.0'
}

task addTestPackageJson(type: Copy) {
  from "${projectDir}/package.json"
  into testDistribPath
}

task installTestNpmDependencies(type: NpmTask) {
  dependsOn = [
      nodeSetup,
      addTestPackageJson,
  ]
  args = ['install', '--prefix', testDistribPath]
}

compileKotlin2Js {
  kotlinOptions {
    outputFile = "${distribPath}/ts2kt.js"
    sourceMap = true
    metaInfo = false
    freeCompilerArgs += ["-output-prefix", "${projectDir}/shebang.txt"]

    moduleKind = 'commonjs'
  }
}

task fetchBuildableDependencies(type: Copy) {
  from "${distribPath}/ts2kt.js"
  into testNodeModulesPath
}

task copyTestFiles(type: Copy) {
  from "${projectDir}/test"
  into testDistribPath

  include "**/*.js"
}

task prepareTestDistrib {
  dependsOn = [
      copyTestFiles,
      fetchBuildableDependencies,
      installTestNpmDependencies,
  ]
}

task runTests(type: NodeTask) {
  dependsOn = [prepareTestDistrib]
  script = file("${testDistribPath}/node_modules/mocha/bin/mocha")

  def reporter = project.findProperty('reporter') ?: 'mocha-simple-html-reporter'
  args = [
      "--reporter", reporter
  ]

  if (reporter == 'mocha-simple-html-reporter') {
    args += ["--reporter-options", "output=${project.buildDir}/report.html"]
  }


  def testsGrep = project.findProperty('testsGrep') ?: 'short:'
  if (testsGrep != "ALL") {
    args += ["--grep", testsGrep]
  }

  args += [
      "${testDistribPath}/test_runner.js"
  ]
}

task prepareNpmPackage(type: Copy) {
  from "package.json", "LICENSE", "npm.template/README.md"
  into distribPath
}

task npmVersion(type: NpmTask) {
  dependsOn = ['prepareNpmPackage']

  def npmVersion = System.getProperty('kotlin.npmjs.ts2kt.version')

  onlyIf {
    npmVersion
  }

  args = ["version", '--prefix', distribPath, npmVersion]
}

task npmPublish(type: NpmTask) {
  dependsOn = [npmVersion]

  def token = System.getProperty("kotlin.npmjs.auth.token")
  def registry = "http://registry.npmjs.org/:_authToken=${token}"

  args = ["publish", distribPath, "--registry", "${registry}"]
}

task npmDeprecate(type: NpmTask) {
  dependsOn = [npmVersion]

  def token = System.getProperty("kotlin.npmjs.auth.token")
  def registry = "http://registry.npmjs.org/:_authToken=${token}"

  args = ["deprecate", "ts2kt", "ts2kt is deprecated, use dukat instead", "--registry", registry ]
}

fetchBuildableDependencies.dependsOn = [compileKotlin2Js]
test.dependsOn = [
    runTests
]

